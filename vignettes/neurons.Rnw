%% LyX 2.0.5 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass[british]{article}
\usepackage{mathptmx}
\usepackage{helvet}
\usepackage{courier}
\renewcommand{\familydefault}{\rmdefault}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{geometry}
\geometry{verbose,tmargin=3cm,bmargin=3cm,lmargin=3cm,rmargin=3cm}
\usepackage{url}

\makeatletter
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
%\VignetteIndexEntry{Plotting traced Lateral Horn Neurons}

\makeatother

\usepackage{babel}
\begin{document}

\title{Plotting traced Lateral Horn Neurons (LHNs)}


\author{Gregory Jefferis, Johannes Kohl, Aaron Ostrovsky, Shahar Frechter}
\maketitle
\begin{abstract}
This vignette shows some examples of how to use neuronal tracings
in combination with GJ's AnalysisSuite R code to analyse the structure
of lateral horn neurons in this study.
\end{abstract}

\section{Installation }

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
library(frulhns)
# note setting fig.path like this (i.e. putting figures in the same folder as the other files)
# works around a subtle bug in knitr where the 'figure' subfolder is not created by a custom plot
# hook such as hook_rgl (but this folder would be created by a regular 'plot').
opts_chunk$set(fig.path='fig-',fig.align='center',fig.show='hold',fig.height=3,fig.width=4,out.height='3in',out.width='4in')
options(replace.assign=TRUE,width=55)
# so that we can make snapshots from rgl plots
knit_hooks$set(custom.plot = hook_rgl)
tryCatch({
	library(nat)
},error = function(e) {
	stop("Please install nat package from https://github.com/jefferis/nat")
})
@

Before running this vignette, it is necessary to install an R package
available at \url{https://github.com/jefferis/nat.as} (which in turn
wraps a large suite of R code available at \url{https://github.com/jefferis/AnalysisSuite}).
There are detailed instructions on the first page, but the long and
the short of it is that the quickest method is to run the following
code in an interactive session:

<<install-instructions, eval=FALSE>>=
install.packages('devtools') # install hadley's devtools if required
library(devtools)
install_github('nat.as','jefferis')

# now use nat.as wrapper package to install AnalysisSuite
library(nat.as)
install_analysis_suite()
reload_analysis_suite()
@


\section{Basic Plots}

Now we can start a fresh R session, load required libraries and get
to work

<<eval=FALSE>>=
library(frulhns)
library(nat)
@

Let's start by plotting a single neuron before registration

<<single-neuron-raw, custom.plot=TRUE>>=
open3d()
plot3d(jknraw[[1]])
@

First 10 neurons

<<first-10-neurons-raw, custom.plot=TRUE>>=
clear3d()
plot3d(jknraw[1:10],col=rainbow,WithNodes=FALSE)
@

Now looking at multiple neurons before registration doesn't make much
sense, so let's try again using the registered neurons

<<first-10-neurons, custom.plot=TRUE>>=
clear3d()
plot3d(jkn[1:10],col=rainbow,WithNodes=FALSE)
@

We can already see that those neurons are more tightly distributed.
However it's not really too clear how they relate to the structure
of the brain. Let's define a quick function to plot a brain surface.

<<IS2Surf>>=
#' Use rgl to plot a 3d surface of the brain
#' 
#' @param alpha Alpha value for surface
#' @param col Colour of surface
#' @param ... Additional parameters passed to \code{plot3dsurface}
#' @export
#' @examples
#' @seealso \code{plot3dsurface} in \code{AnalysisSuite} code bundle.
#' is2surf()
#' is2surf(alpha=0.4,col='cyan')
is2surf<-function(alpha=0.2,col='grey',...){
  plot3d(IS2Surf,"Exterior",col=col,alpha=alpha,...)
}
@

Now we can use that to provide some context:

<<first-10-neurons-brain, custom.plot=TRUE, dev='png', dpi=300>>=
clear3d()
is2surf()
plot3d(jkn[1:10],col=rainbow,WithNodes=FALSE)
@
\end{document}
